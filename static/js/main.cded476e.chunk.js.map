{"version":3,"sources":["Components/phonebookForm/PhonebookFormItemStyled.js","Components/phonebookForm/PhonebookFormItem.js","Components/filter/FilterItem.js","Components/contacts/ContactsItemStyled.js","Components/contacts/ContactsItem.js","App.js","index.js"],"names":["PhonebookItemStyled","styled","form","PhonebookFormItem","state","name","number","handleNameChange","evt","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","action","this","onChange","type","pattern","title","required","id","Component","FilterItem","onChangeFilter","target","ContactsItemStyled","ul","ContactsItem","onClickRemove","onClick","ContactsList","getVisibleContacts","onRemove","length","map","App","contacts","filter","changeFilter","contact","toLowerCase","includes","handleRemove","contactId","prevState","formSubmithandler","data","dublicateContact","find","alert","newContact","uuidv4","preState","console","log","localStorage","getItem","parsedContacts","JSON","parse","lenght","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cded476e.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const PhonebookItemStyled = styled.form`\r\n  width: 250px;\r\n  border: 1px solid blue;\r\n  .phonebook-name {\r\n    margin-left: 10px;\r\n    font-size: 22px;\r\n    font-weight: bold;\r\n  }\r\n  .phonebook-number {\r\n    margin-left: 10px;\r\n    font-size: 22px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .input {\r\n    width: 150px;\r\n    margin-left: 10px;\r\n    margin-bottom: 10px;\r\n    border: 1px solid blue;\r\n    :hover {\r\n      border-color: red;\r\n    }\r\n    :focus {\r\n      border-color: red;\r\n      border: 3px solid red;\r\n    }\r\n  }\r\n\r\n  .add-contact-btn {\r\n    display: block;\r\n    margin-left: 10px;\r\n    margin-bottom: 10px;\r\n    border-radius: 18px;\r\n    color: blue;\r\n    border-color: blue;\r\n    background-color: yellow;\r\n    :hover {\r\n      color: red;\r\n      border-color: red;\r\n    }\r\n    :focus {\r\n      border-color: yellow;\r\n      border: 3px solid yellow;\r\n    }\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PhonebookItemStyled } from \"./PhonebookFormItemStyled\";\r\n\r\nclass PhonebookFormItem extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleNameChange = (evt) => {\r\n    const { name, value } = evt.currentTarget;\r\n    this.setState({ [name]: value });\r\n    const nameValue = this.setState({ [name]: value });\r\n\r\n    return nameValue;\r\n  };\r\n\r\n  handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"phonebook-container\">\r\n        <h2 className=\"phonebook-title\">Phonebook</h2>\r\n        <PhonebookItemStyled\r\n          action=\"\"\r\n          className=\"form-input\"\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          <label className=\"filter-input\">\r\n            Name\r\n            <br />\r\n            <input\r\n              onChange={this.handleNameChange}\r\n              value={this.state.name}\r\n              className=\"input\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"phonebook-filter\"\r\n              required\r\n              id={this.id}\r\n            />\r\n          </label>\r\n\r\n          <label className=\"phonebook-number\">\r\n            Number\r\n            <br />\r\n            <input\r\n              onChange={this.handleNameChange}\r\n              value={this.state.number}\r\n              className=\"input\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              id={this.id}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\" className=\"add-contact-btn\">\r\n            Add contact\r\n          </button>\r\n        </PhonebookItemStyled>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PhonebookFormItem;\r\n\r\nPhonebookFormItem.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function FilterItem({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      <label className=\"phonebook-name\">\r\n        Find contacts by name\r\n        <br />\r\n        <input\r\n          className=\"Type-editor-input\"\r\n          onChange={(evt) => onChangeFilter(evt.target.value)}\r\n          value={value}\r\n          type=\"text\"\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilterItem.propTypes = {\r\n  value: PropTypes.string,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactsItemStyled = styled.ul`\r\n  .contacts-item {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  .delete-button {\r\n    width: 100px;\r\n    height: 20px;\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ContactsItemStyled } from \"./ContactsItemStyled\";\r\n\r\n\r\nconst ContactsItem = ({ name, number, onClickRemove }) => {\r\n  return (\r\n    <li className=\"contacts-item\">\r\n      <p>\r\n        {name}: {number}\r\n      </p>\r\n      <button type=\"button\" className=\"delete-button\" onClick={onClickRemove}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n\r\n    // <ul className=\"contacts-container\">\r\n    //   <ul className=\"contacts-list\">\r\n    //     {/* {contacts.map((contact) => (\r\n    //       <li className=\"contacts-item\" key={contact.id}>\r\n    //         {contact.name}: {contact.number}\r\n    //       </li>\r\n    //     ))} */}\r\n    //   </ul>\r\n    // </ul>\r\n  );\r\n};\r\n\r\nconst ContactsList = ({ getVisibleContacts, onRemove }) => {\r\n  return (\r\n    getVisibleContacts.length > 0 && (\r\n      <ContactsItemStyled>\r\n        {getVisibleContacts.map(({ id, name, number }) => (\r\n          <ContactsItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            onClickRemove={() => onRemove(id)}\r\n          />\r\n        ))}\r\n      </ContactsItemStyled>\r\n    )\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n\r\nContactsItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onClickRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nContactsList.propTypes = {\r\n  getVisibleContacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PhonebookFormItem from \"./Components/phonebookForm/PhonebookFormItem\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport FilterItem from \"./Components/filter/FilterItem\";\r\nimport ContactsList from \"./Components/contacts/ContactsItem\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  changeFilter = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  handleRemove = (contactId) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n      };\r\n    });\r\n  };\r\n\r\n  // Отображение имени и телефона, после ввода данных в инпут\r\n  formSubmithandler = (data) => {\r\n    const { contacts } = this.state;\r\n    const dublicateContact = contacts.find(\r\n      (contact) => contact.name.toLowerCase() === data.name.toLowerCase()\r\n    );\r\n\r\n    if (dublicateContact) {\r\n      alert(`${dublicateContact.name} is already in contacts!`);\r\n      return;\r\n    }\r\n    const newContact = { name: data.name, number: data.number, id: uuidv4() };\r\n    this.setState((preState) => {\r\n      return { contacts: [...preState.contacts, newContact] };\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"app did mount\");\r\n\r\n    const contacts = localStorage.getItem(\"contacts\");\r\n    const parsedContacts = JSON.parse(contacts);\r\n\r\n    if (parsedContacts && this.state.contacts.lenght > 0) {\r\n      this.state({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log(\"app update mount\");\r\n\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      console.log(\"обновилось contacts field\");\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <PhonebookFormItem\r\n          onSubmit={this.formSubmithandler}\r\n          contacts={contacts}\r\n        />\r\n        <h2 className=\"contacts-title\">Contacts</h2>\r\n        <FilterItem value={filter} onChangeFilter={this.changeFilter} />\r\n        <ContactsList\r\n          getVisibleContacts={this.getVisibleContacts()}\r\n          onRemove={this.handleRemove}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}